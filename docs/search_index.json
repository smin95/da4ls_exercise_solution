[
["index.html", "Data Analysis for the Life Sciences with R: Exercise Solutions Welcome Acknowledgment", " Data Analysis for the Life Sciences with R: Exercise Solutions Seung Hyun (Sam) Min 2020-12-09 Welcome This book contains unofficial exercise solutions for the book *Data Analysis for the Life Sciences with R by Rafael A. Irizarry and Michael I. Love. The PDF copy of the book is available for free and the physical copy is available in Amazon. Acknowledgment I would like to thank Rafael A. Irizarry and Michael I. Love for writing this wonderful book. "],
["getting-started.html", "Chapter 1 Getting started", " Chapter 1 Getting started Since this chapter does not deal with statistics, I have decided to skip this chapter altogether. "],
["inference.html", "Chapter 2 Inference 2.1 2.7 Exercises 2.2 Question 5", " Chapter 2 Inference First, upload necessary package(s). library(tidyverse) #also uploads dplyr 2.1 2.7 Exercises If you have not downloaded the data before, dir &lt;- &quot;https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/&quot; filename &lt;- &quot;femaleControlsPopulation.csv&quot; url &lt;- paste0(dir, filename) x &lt;- unlist(read.csv(url)) Or if you already have downloaded the data, then just upload it. dat &lt;- read.csv(&#39;femaleMiceWeights.csv&#39;) bodyweight &lt;- select(dat, Bodyweight) x &lt;- unlist(bodyweight) # or use pipe %&gt;% x &lt;- read.csv(&#39;femaleMiceWeights.csv&#39;) %&gt;% select(Bodyweight) %&gt;% unlist() Check out what unlist does by typing ?unlist in the command. The second method is more concise because of the pipe %&gt;%, which allows multiple lines of commands to be in one continuous line. 2.1.1 Question 1 What is the average of these weights? mean(x) ## [1] 25.32375 2.1.2 Question 2 After setting the seed at 1, set.seed(1) take a random sample size 5. What is the absolute value (use abs) of the difference between the average of the sample and the average of all the values? set.seed(1) avg_sample &lt;- mean(sample(x,5)) # average of the sample of 5 avg_pop &lt;- mean(x) # average of all values abs(avg_sample - avg_pop) # absolute difference ## [1] 0.92025 2.1.3 Question 3 After setting the seed at 5, set.seed(5) take a random sample size 5. What is the absolute value (use abs) of the difference between the average of the sample and the average of all the values? set.seed(5) avg_sample &lt;- mean(sample(x,5)) # average of the sample of 5 avg_pop &lt;- mean(x) # average of all values abs(avg_sample - avg_pop) # absolute difference ## [1] 0.05025 2.1.4 Question 4 Why are the answers from 2 and 3 different? set.seed(1) # question 2 a &lt;- sample(x,5) a ## Bodyweight7 Bodyweight9 Bodyweight13 Bodyweight20 Bodyweight5 ## 28.40 22.51 25.71 30.92 23.68 set.seed(5) # question 3 b &lt;- sample(x,5) b ## Bodyweight5 Bodyweight16 Bodyweight21 Bodyweight6 Bodyweight3 ## 23.68 25.34 34.02 19.79 24.04 identical(a,b) # these two samples are not identical ## [1] FALSE Notice that samples a and b differ. Since the seeds were different (1 vs 5), different random numbers were generated. Therefore, the answer is C: Because the average of the samples is a random variable. 2.2 Question 5 Set the seed at 1, then using a for-loop take a random sample of 5 mice in 1,000 times. Save these averages. What percent of these 1,000 averages are more than 1 gram away from the average of x? set.seed(1) n &lt;- 1000 res &lt;- vector(&#39;double&#39;,n) for (i in seq(n)) { avg_sample &lt;- mean(sample(x,5)) res[[i]] &lt;- avg_sample } mean(abs(res-mean(x)) &gt; 1) ## [1] 0.498 To make a for loop work in R, an empty vector needs to be created first. This can be achieved with the function vector. In this example, the empty vector is res (short for result). In the for loop, each average from one repetition gets stored in res. "]
]
